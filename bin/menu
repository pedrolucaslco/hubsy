#!/bin/bash
# Hubsy Menu ------------------------------------------------------------------

# Useful ascii icons: âœ± â”œ â”” â”€

# Check and Update version of Hubsy --------------------------------------------

# Show menu --------------------------------------------------------------------

 menu_options=(
    "Terminal           â€” Exit Hubsy directly to Terminal" \
    "Scripts            â€” Run your custom scripts from ~/scripts" \
    "Install            â€” Install apt packages with easy search" \
    "Update             â€” Update & Upgrade your system" \
    "Setup              â€” Setup common linux files and .config files from applications" \
    "Refresh Terminal   â€” Run a simple source ./bashrc " \
    "   " \
    "â”€â”€ TUI Terminal Interfaces" \
    "   " \
    "Lazydocker         â€” A simple terminal UI for docker" \
    "Btop               â€” Resource Monitor on Terminal" \
    "   " \
    "â”€â”€ Third Party Tools from the Community" \
    "   " \
    "Linutil            â€” Chris Titus Tech's Linux Toolbox" \
    "Systemctl-tui      â€” A TUI for manage systemd services" \
    "   " \
    "â”€â”€ About" \
    "   " \
    "About This PC      â€” Show system information with Fastfetch" \
    "About Hubsy        â€” Hubsy about section" \
    "   " \
    "Quit               â€” Exit Hubsy and Quit the terminal" \
    "Shutdown           â€” Shutdown the system" \
    "Restart            â€” Restart the system" \
    "CheckMem           â€” Check memory" \
    "   "
)

# menu_options+=($(find ~/scripts -maxdepth 1 -type f -executable))

# SÃ³ adiciona debug se tiver flag
if [ "$HUBSY_DEBUG" -eq 1 ]; then
    menu_options+=("â”€â”€ Hubsy Debug" \
    "   " \
    "Hubsy Dev Enviropment" \
    "Set all bin files as executable" \
    "Set Screen Britghtness to Max" \
    "Set Screen Britghtness to Min" \
    "   ")
fi

while true; do

    clear
    source $HUBSY_PATH/bin/header

    option=$(printf "%s\n" "${menu_options[@]}" | fzf \
        --prompt="Select an option: " \
        --header="Use arrows or type to search" \
        --border --height=80% --reverse \
        # --color=fg:#cdd6f4,bg:#1e1e2e,hl:#f38ba8 \
        # --color=fg+:#cdd6f4,bg+:#313244,hl+:#f38ba8 \
        # --color=info:#89b4fa,prompt:#f9e2af,pointer:#a6e3a1,marker:#a6e3a1
        )

    # Se nÃ£o selecionar nada (ESC ou CTRL+C)
    [ -z "$option" ] && break



    case "$option" in
        # *"   "*) ;;  # ignora divisor 
        # *"â”€â”€"*) ;; # ignora divisor

        Terminal*)
            clear 
            gum spin --spinner dot --title "Opening a new terminal..." -- sleep 0.2
            echo 'To return do Hubsy, type "hubsy" and press Enter.'
            return 0 2>/dev/null || break
            ;;

        Scripts*)

            scripts=($(find ~/scripts -maxdepth 1 -type f -executable))
            
            if [ ${#scripts[@]} -eq 0 ]; then
                echo "No scripts found in ~/scripts"
                sleep 2
            else

                options=("Back to menu")
                options+=("Edit scripts...")
                options+=("Set all scripts as executable")
                options+=(" ")
                options+=("${scripts[@]##*/}")
                
                scriptchoice=$(printf "%s\n" "${options[@]}" | fzf \
                    --prompt="Select an option: " \
                    --header="Use arrows or type to search" \
                    --border --height=80% --reverse \
                    # --color=fg:#cdd6f4,bg:#1e1e2e,hl:#f38ba8 \
                    # --color=fg+:#cdd6f4,bg+:#313244,hl+:#f38ba8 \
                    # --color=info:#89b4fa,prompt:#f9e2af,pointer:#a6e3a1,marker:#a6e3a1
                )

                if [ "$scriptchoice" = "Back to menu" ]; then
                    continue
                elif [ "$scriptchoice" = "Edit scripts..." ]; then
                    gum spin --spinner dot --title "Opening scripts folder..." -- sleep 0.5
                    $EDITOR ~/scripts/.
                    continue
                elif [ "$scriptchoice" = "Set all scripts as executable" ]; then
                    sudo chmod +x ~/scripts/*.sh
                    gum spin --spinner dot --title "Setting all scripts as executable..." -- sleep 0.5
                    gum confirm "Back to menu?" && continue
                else 
                    bash ~/scripts/"$scriptchoice"
                    gum confirm "Back to menu?" && continue
                fi
            fi
            ;;

        Install*)
            $HUBSY_PATH/bin/apt-install.sh
            gum confirm "Back to menu?" && continue
            ;;

        Update*)
            source $HUBSY_PATH/bin/system-update
            source $HUBSY_PATH/bin/hubsy-update

            gum confirm "System and Hubsy updated. Back to menu?" && continue
            ;;

        Setup*)
            $HUBSY_PATH/bin/setup.sh
            ;;
        
        *"Refresh Terminal"*)
            gum spin --spinner dot --title "Refreshing terminal..." -- sleep 0.5
            
            [ -f ~/.bashrc ] && source ~/.bashrc
            [ -f ~/.bash_aliases ] && source ~/.bash_aliases
            exec "$SHELL"
            ;;

        Lazydocker*)
            if ! command -v lazydocker &> /dev/null; then
                echo "Lazydocker is not installed. Please install it first."
                sleep 2
            else
                lazydocker
                gum confirm "Back to menu?" && continue
            fi
            ;;

        Btop*)
            if ! command -v btop &> /dev/null; then
                echo "Btop is not installed. Please install it first."
                sleep 2
            else
                btop
                gum confirm "Back to menu?" && continue
            fi
            ;;

        Linutil*)
            curl -fsSL https://christitus.com/linux | sh
            gum confirm "Back to menu?" && continue
            ;;

        Systemctl-tui*)
            if ! command -v systemctl-tui &> /dev/null; then
                gum spin --spinner dot --title "Installing Systemctl-tui..." -- sleep 1
                curl https://raw.githubusercontent.com/rgwood/systemctl-tui/master/install.sh | bash
            else
                systemctl_tui_path=$(which systemctl-tui)
                sudo $systemctl_tui_path
                gum confirm "Back to menu?" && continue
            fi
            ;;

        *"About This PC"*)
            clear
            fastfetch
            gum confirm "Back to menu?" && continue
            ;;

        *"About Hubsy"*)
            clear
            source $HUBSY_PATH/bin/header
            echo " "
            cat $HUBSY_PATH/description
            echo " "
            echo "Visit my GitHub: https://github.com/pedrolucaslco"
            echo " "
            gum confirm "Back to menu?" && continue
            ;;

        Quit*)
            clear && exit
        ;;

        Shutdown*)
            gum spin --spinner dot --title "Shutting down the system..." -- sleep 0.5
            sudo shutdown -h now
            ;;
        
        Restart*)
            gum spin --spinner dot --title "Restarting the system..." -- sleep 0.5
            sudo shutdown -r now
            ;;

        CheckMem*)
            gum spin --spinner dot --title "Checking memory..." -- sleep 0.5
            echo "=== MemÃ³ria e Swap ==="; free -h; \
            echo; echo "=== ZRAM ==="; swapon --show; \
            echo; echo "=== Swappiness / Cache Pressure ==="; cat /proc/sys/vm/swappiness /proc/sys/vm/vfs_cache_pressure | awk '{if(NR==1) print "swappiness: "$1; else print "vfs_cache_pressure: "$1}'; \
            echo; echo "=== systemd-oomd ==="; systemctl is-active systemd-oomd; \
            echo; echo "=== Top processos por RAM ==="; ps -eo pid,ppid,cmd,%mem,%cpu --sort=-%mem | head -n 10
            gum confirm "Back to menu?" && continue
            ;;

        # DEBUG OPTIONS
        *"Hubsy Dev Enviropment"*)
            gum spin --spinner dot --title "Opening Hubsy Development Enviropment..." -- sleep 0.5
            code $HUBSY_PATH
            gum confirm "Back to menu?" && continue
            ;;

        *"Set Screen Britghtness to Max"*)
            sudo brightnessctl set 70% -q
            echo "ðŸ”† Brightness set to 70%"
            gum confirm "Back to menu?" && continue
            ;;

        *"Set Screen Britghtness to Min"*)
            sudo brightnessctl set 1% -q
            echo "ðŸŒ‘ Brightness set to 1%"
            gum confirm "Back to menu?" && continue
            ;;

        *"Set all bin files as executable"*)
            find "$HUBSY_PATH/bin" -type f -exec sudo chmod +x {} \;
            gum confirm "Back to menu?" && continue
            ;;
    esac
done
